<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>tutorials on sainth.de</title><link>https://www.sainth.de/de/categories/tutorials/</link><description>Recent content in tutorials on sainth.de</description><generator>Hugo -- gohugo.io</generator><language>de</language><copyright>©2015-2020 Tobias Wink</copyright><lastBuildDate>Mon, 01 May 2017 19:30:00 +0100</lastBuildDate><atom:link href="https://www.sainth.de/de/categories/tutorials/index.xml" rel="self" type="application/rss+xml"/><item><title>JWTs, eine Ergänzung zu BasicAuth</title><link>https://www.sainth.de/de/blog/jwts-and-basic-auth/</link><pubDate>Mon, 01 May 2017 19:30:00 +0100</pubDate><guid>https://www.sainth.de/de/blog/jwts-and-basic-auth/</guid><description>&lt;p>Die meisten REST-APIs unterstützen BasicAuth, wenn sie eine Authentifizierung erfordern und die Nutzerdaten selber verwalten. Bei der Wahl der Funktion zum Schutz von gespeicherten Passwörtern gilt es, die richtige Balance zwischen Nutzerkomfort und Angreiferschutz zu finden. Man möchte einerseits Angreifer möglichst lange aufhalten, andererseits aber auch Benutzern möglichst geringe Antwortzeiten ermöglichen. Alle von der &lt;a href="https://www.owasp.org/index.php/Password_Storage_Cheat_Sheet#Impose_infeasible_verification_on_attacker">OWASP&lt;/a> empfohlenen adaptiven Passwort-Hash-Verfahren bieten daher die Möglichkeit, die Geschwindigkeit des Algorithmus über einen &lt;em>Work Factor&lt;/em> zu konfigurieren. Um diesen &lt;em>Work Factor&lt;/em> möglichst hoch wählen zu können, ohne dabei die Benutzer unnötig zu verärgern, bietet sich nun die Nutzung von JWTs an.&lt;/p></description></item><item><title>Nexus als Binär-Repository für APKs nutzen</title><link>https://www.sainth.de/de/blog/use-nexus-as-a-binary-repository-for-apks/</link><pubDate>Tue, 17 Jan 2017 21:30:00 +0100</pubDate><guid>https://www.sainth.de/de/blog/use-nexus-as-a-binary-repository-for-apks/</guid><description>&lt;p>Wer &lt;a href="https://www.sonatype.com/download-oss-sonatype">Nexus OSS&lt;/a> nutzt, um seine fertigen Binärartefakte abzulegen, möchte dies natürlich auch für seine APKs machen. Da ich momentan beruflich an einer Android-App arbeite, habe ich nun meine Erfahrungen damit sammeln dürfen. Und damit ich beim nächsten Mal nicht wieder über dieselben Fallstricke stolpere, werde ich es hier Schritt für Schritt erläutern.&lt;/p>
&lt;p>Meine bisherigen Erfahrungen mit &lt;a href="https://gradle.org/">Gradle&lt;/a> sind (glücklicherweise) kaum der Rede wert, sodass zuerst eine ausführliche Google-Recherche auf dem Programm stand. Diese führte mich auch alsbald zum &lt;a href="https://docs.gradle.org/current/userguide/maven_plugin.html">Maven-Plugin&lt;/a> für Gradle und der folgenden Konfiguration für &lt;code>uploadArchives&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-groovy" data-lang="groovy">apply plugin: &lt;span style="color:#e6db74">&amp;#39;maven&amp;#39;&lt;/span>
uploadArchives &lt;span style="color:#f92672">{&lt;/span>
repositories &lt;span style="color:#f92672">{&lt;/span>
mavenDeployer &lt;span style="color:#f92672">{&lt;/span>
repository&lt;span style="color:#f92672">(&lt;/span>url: &lt;span style="color:#e6db74">&amp;#34;file://localhost/tmp/myRepo/&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ein entsprechender Aufruf mit &lt;code>gradlew clean assemble uploadArchives&lt;/code> lief zwar erfolgreich durch, aber es wurden keinerlei Artefakte abgelegt. So wurde ich dann auf den Gradle-Userguide &lt;a href="https://docs.gradle.org/current/userguide/artifact_management.html">Publishing artifacts&lt;/a> aufmerksam und mir wurde klar, dass die APKs deklariert werden müssen, damit &lt;code>uploadArchives&lt;/code> auch weiß, was hochgeladen werden soll.&lt;/p></description></item></channel></rss>