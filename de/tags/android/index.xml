<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>android on sainth.de</title><link>https://www.sainth.de/de/tags/android/</link><description>Recent content in android on sainth.de</description><generator>Hugo -- gohugo.io</generator><language>de</language><copyright>©2015-2020 Tobias Wink</copyright><lastBuildDate>Tue, 17 Jan 2017 21:30:00 +0100</lastBuildDate><atom:link href="https://www.sainth.de/de/tags/android/index.xml" rel="self" type="application/rss+xml"/><item><title>Nexus als Binär-Repository für APKs nutzen</title><link>https://www.sainth.de/de/blog/use-nexus-as-a-binary-repository-for-apks/</link><pubDate>Tue, 17 Jan 2017 21:30:00 +0100</pubDate><guid>https://www.sainth.de/de/blog/use-nexus-as-a-binary-repository-for-apks/</guid><description>&lt;p>Wer &lt;a href="https://www.sonatype.com/download-oss-sonatype">Nexus OSS&lt;/a> nutzt, um seine fertigen Binärartefakte abzulegen, möchte dies natürlich auch für seine APKs machen. Da ich momentan beruflich an einer Android-App arbeite, habe ich nun meine Erfahrungen damit sammeln dürfen. Und damit ich beim nächsten Mal nicht wieder über dieselben Fallstricke stolpere, werde ich es hier Schritt für Schritt erläutern.&lt;/p>
&lt;p>Meine bisherigen Erfahrungen mit &lt;a href="https://gradle.org/">Gradle&lt;/a> sind (glücklicherweise) kaum der Rede wert, sodass zuerst eine ausführliche Google-Recherche auf dem Programm stand. Diese führte mich auch alsbald zum &lt;a href="https://docs.gradle.org/current/userguide/maven_plugin.html">Maven-Plugin&lt;/a> für Gradle und der folgenden Konfiguration für &lt;code>uploadArchives&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-groovy" data-lang="groovy">apply plugin: &lt;span style="color:#e6db74">&amp;#39;maven&amp;#39;&lt;/span>
uploadArchives &lt;span style="color:#f92672">{&lt;/span>
repositories &lt;span style="color:#f92672">{&lt;/span>
mavenDeployer &lt;span style="color:#f92672">{&lt;/span>
repository&lt;span style="color:#f92672">(&lt;/span>url: &lt;span style="color:#e6db74">&amp;#34;file://localhost/tmp/myRepo/&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ein entsprechender Aufruf mit &lt;code>gradlew clean assemble uploadArchives&lt;/code> lief zwar erfolgreich durch, aber es wurden keinerlei Artefakte abgelegt. So wurde ich dann auf den Gradle-Userguide &lt;a href="https://docs.gradle.org/current/userguide/artifact_management.html">Publishing artifacts&lt;/a> aufmerksam und mir wurde klar, dass die APKs deklariert werden müssen, damit &lt;code>uploadArchives&lt;/code> auch weiß, was hochgeladen werden soll.&lt;/p></description></item></channel></rss>