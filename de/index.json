[{"title":"√úber mich","date":"","description":"Wer macht das hier eigentlich","body":" Hallo, ich rede nicht gern √ºber mich selbst. Nichtsdestotrotz sollte jeder Besucher die M√∂glichkeit bekommen, sich ein ungef√§hres Bild √ºber mich, meine Erfahrungen und mein Know-How zu machen, um dadurch vielleicht meine Themenwahl, Meinungen und andere Aussagen besser nachvollziehen zu k√∂nnen.\nIch wurde in den 1980ern als Teil einer Gro√üfamilie geboren und bin in einer ostwestf√§lischen Kleinstadt aufgewachsen. Neben den Nachteilen, die einem √§ltere Geschwister bescheren, hatte es auch Vorteile. Einer davon war, dass ich bereits im Kindergarten Zugriff auf einen Commodore C64 hatte und so schon fr√ºh, vor allem f√ºr die damalige Zeit, durch Videospiele meine Leidenschaft f√ºr Computer entdecken konnte.\nW√§hrend meiner Schulzeit habe ich neben dem Gaming auch mit dem Programmieren angefangen. Mein Einstieg waren neben HTML und CSS in erster Linie Logo und QBasic. In der Oberstufe folgten dann noch PHP, C und SQL. Aber die Schulzeit habe ich nicht ausschlie√ülich vor dem PC zugebracht, sondern auch Freundschaften kn√ºpfen k√∂nnen, die bis in die Gegenwart reichen, auch wenn man hunderte Kilometer auseinander lebt und sich dadurch nur selten sieht. Zus√§tzlich habe ich in der Zeit auch meine mittlerweile Frau kennengelernt. Insgesamt habe ich 15 Jahre in diversen Schulformen zugebracht, um als ITA mit Fachhochschulreife in den \u0026ldquo;Ernst\u0026rdquo; des Lebens zu starten. Danach fing f√ºr mich das Wechselspiel zwischen (Weiter-)Bildung und \u0026ldquo;Arbeiten\u0026rdquo; an:\n Duale Ausbildung zum Fachinformatiker, Fachrichtung: Anwendungsentwicklung (2,5 Jahre) Consulting quer durch Deutschland mit Schwerpunkt: Unix-/Linux-Administration (~2 Jahre) Bachelor of Science: Informatik (3,5 Jahre) Software Developer, √ºberwiegend im Backend-Bereich (~3,5 Jahre) Master of Science: Informatik (1,5 Jahre) Kurzer Ausflug in die Forschung (2,5 Monate) Software Developer  Es gab zwar noch weitere Stationen und auch w√§hrend des Studiums habe ich teilweise gearbeitet, aber ich hoffe, dass sich mein M√§andern erkennen l√§sst. Etwas, das f√ºr mich immer mal wieder zu einem Problem wird, ist, dass ich am liebsten tieferes Wissen √ºber alle Bereiche der Informatik erwerben w√ºrde. Daher passiert es ab und zu, dass ich bei Recherchen ins Kaninchenloch abtauche und es lange dauert, bis ich wieder auftauche. Mein beruflicher Fokus ist zwar √ºber die Jahre in der Softwareentwicklung h√§ngengeblieben, aber da ich privat seit gesch√§tzt 2010 fast ausschlie√ülich Linux nutze (auch zum Zocken), entwickeln sich meine Kenntnisse in diesem Bereich auch weiter. Bei Programmiersprachen habe ich √ºber die Jahre gemerkt, dass der Compiler mein Freund ist und ich daher ein gro√üer Bef√ºrworter statisch typisierter Sprachen geworden bin.\nNun noch ein Versuch, mich in Stichpunkten zu beschrieben:\n Sprachen, die ich mag:  SQL Kotlin Elm Haskell Rust C# Java   Betriebssysteme, die ich mag:  GNU/Linux, aktuell besonders in Form von Arch Linux und EndeavourOS Alle UNIXe, bei der Root wirklich Root ist (ich meine dich, MacOS)   Software, die ich mag:  Quelloffene üòâ   Videospiele, die ich mag:  California Games Sid Meier\u0026rsquo;s Pirates! Mafia (C64), auch wenn ich es als Al Capone Jr. kennenlernte Die 4te Offenbarung, als die alte Community noch existierte (vor ca. 2005) Ultima Online (div. FreeShards) World of Warcraft (nur bis einschlie√ülich TBC) Die Quake-Reihe, besonders Quake 3 Arena (vor allem mit CPMA) Die Doom-Reihe, besonders Doom (2016) Die Monkey-Island-Reihe Die Point\u0026amp;Click-Adventures von King Art, allen voran The Book of Unwritten Tales Die Diablo-Reihe, besonders Diablo II mit Lord of Destruction Hellblade: Senua‚Äôs Sacrifice Hunt: Showdown   Filme, die ich mag:  Hackers Matrix-Trilogie Inception The Illusionist Prestige - Meister der Magie Equilibrium Oceans-Reihe Shutter Island Pans Labyrinth   Autoren, die ich mag:  Markus Heitz Richard Schwartz Joe Abercrombie    ","ref":"/de/about/"},{"title":"Datenschutzerkl√§rung","date":"","description":"","body":"Personenbezogene Daten (nachfolgend zumeist nur ‚ÄûDaten‚Äú genannt) werden von uns nur im Rahmen der Erforderlichkeit sowie zum Zwecke der Bereitstellung eines funktionsf√§higen und nutzerfreundlichen Internetauftritts, inklusive seiner Inhalte und der dort angebotenen Leistungen, verarbeitet.\nGem√§√ü Art. 4 Ziffer 1. der Verordnung (EU) 2016/679, also der Datenschutz-Grundverordnung (nachfolgend nur ‚ÄûDSGVO‚Äú genannt), gilt als ‚ÄûVerarbeitung‚Äú jeder mit oder ohne Hilfe automatisierter Verfahren ausgef√ºhrter Vorgang oder jede solche Vorgangsreihe im Zusammenhang mit personenbezogenen Daten, wie das Erheben, das Erfassen, die Organisation, das Ordnen, die Speicherung, die Anpassung oder Ver√§nderung, das Auslesen, das Abfragen, die Verwendung, die Offenlegung durch √úbermittlung, Verbreitung oder eine andere Form der Bereitstellung, den Abgleich oder die Verkn√ºpfung, die Einschr√§nkung, das L√∂schen oder die Vernichtung.\nMit der nachfolgenden Datenschutzerkl√§rung informieren wir Sie insbesondere √ºber Art, Umfang, Zweck, Dauer und Rechtsgrundlage der Verarbeitung personenbezogener Daten, soweit wir entweder allein oder gemeinsam mit anderen √ºber die Zwecke und Mittel der Verarbeitung entscheiden. Zudem informieren wir Sie nachfolgend √ºber die von uns zu Optimierungszwecken sowie zur Steigerung der Nutzungsqualit√§t eingesetzten Fremdkomponenten, soweit hierdurch Dritte Daten in wiederum eigener Verantwortung verarbeiten.\nUnsere Datenschutzerkl√§rung ist wie folgt gegliedert:\nI. Informationen √ºber uns als Verantwortliche\nII. Rechte der Nutzer und Betroffenen\nIII. Informationen zur Datenverarbeitung\nI. Informationen √ºber uns als Verantwortliche Verantwortlicher Anbieter dieses Internetauftritts im datenschutzrechtlichen Sinne ist:\nTobias Wink\nErasmusweg 8\n75015 Bretten\nDeutschland\nE-Mail: info@sainth.de\nII. Rechte der Nutzer und Betroffenen Mit Blick auf die nachfolgend noch n√§her beschriebene Datenverarbeitung haben die Nutzer und Betroffenen das Recht\n auf Best√§tigung, ob sie betreffende Daten verarbeitet werden, auf Auskunft √ºber die verarbeiteten Daten, auf weitere Informationen √ºber die Datenverarbeitung sowie auf Kopien der Daten (vgl. auch Art. 15 DSGVO); auf Berichtigung oder Vervollst√§ndigung unrichtiger bzw. unvollst√§ndiger Daten (vgl. auch Art. 16 DSGVO); auf unverz√ºgliche L√∂schung der sie betreffenden Daten (vgl. auch Art. 17 DSGVO), oder, alternativ, soweit eine weitere Verarbeitung gem√§√ü Art. 17 Abs. 3 DSGVO erforderlich ist, auf Einschr√§nkung der Verarbeitung nach Ma√ügabe von Art. 18 DSGVO; auf Erhalt der sie betreffenden und von ihnen bereitgestellten Daten und auf √úbermittlung dieser Daten an andere Anbieter/Verantwortliche (vgl. auch Art. 20 DSGVO); auf Beschwerde gegen√ºber der Aufsichtsbeh√∂rde, sofern sie der Ansicht sind, dass die sie betreffenden Daten durch den Anbieter unter Versto√ü gegen datenschutzrechtliche Bestimmungen verarbeitet werden (vgl. auch Art. 77 DSGVO).  Dar√ºber hinaus ist der Anbieter dazu verpflichtet, alle Empf√§nger, denen gegen√ºber Daten durch den Anbieter offengelegt worden sind, √ºber jedwede Berichtigung oder L√∂schung von Daten oder die Einschr√§nkung der Verarbeitung, die aufgrund der Artikel 16, 17 Abs. 1, 18 DSGVO erfolgt, zu unterrichten. Diese Verpflichtung besteht jedoch nicht, soweit diese Mitteilung unm√∂glich oder mit einem unverh√§ltnism√§√üigen Aufwand verbunden ist. Unbeschadet dessen hat der Nutzer ein Recht auf Auskunft √ºber diese Empf√§nger.\nEbenfalls haben die Nutzer und Betroffenen nach Art. 21 DSGVO das Recht auf Widerspruch gegen die k√ºnftige Verarbeitung der sie betreffenden Daten, sofern die Daten durch den Anbieter nach Ma√ügabe von Art. 6 Abs. 1 lit. f) DSGVO verarbeitet werden. Insbesondere ist ein Widerspruch gegen die Datenverarbeitung zum Zwecke der Direktwerbung statthaft.\nIII. Informationen zur Datenverarbeitung Ihre bei Nutzung unseres Internetauftritts verarbeiteten Daten werden gel√∂scht oder gesperrt, sobald der Zweck der Speicherung entf√§llt, der L√∂schung der Daten keine gesetzlichen Aufbewahrungspflichten entgegenstehen und nachfolgend keine anderslautenden Angaben zu einzelnen Verarbeitungsverfahren gemacht werden.\nServerdaten Aus technischen Gr√ºnden, insbesondere zur Gew√§hrleistung eines sicheren und stabilen Internetauftritts, werden Daten durch Ihren Internet-Browser an uns bzw. an unseren Webspace-Provider √ºbermittelt. Mit diesen sog. Server-Logfiles werden u.a. Typ und Version Ihres Internetbrowsers, das Betriebssystem, die Website, von der aus Sie auf unseren Internetauftritt gewechselt haben (Referrer URL), die Website(s) unseres Internetauftritts, die Sie besuchen, Datum und Uhrzeit des jeweiligen Zugriffs sowie die IP-Adresse des Internetanschlusses, von dem aus die Nutzung unseres Internetauftritts erfolgt, erhoben.\nDiese so erhobenen Daten werden vorr√ºbergehend gespeichert, dies jedoch nicht gemeinsam mit anderen Daten von Ihnen.\nDiese Speicherung erfolgt auf der Rechtsgrundlage von Art. 6 Abs. 1 lit. f) DSGVO. Unser berechtigtes Interesse liegt in der Verbesserung, Stabilit√§t, Funktionalit√§t und Sicherheit unseres Internetauftritts.\nDie Daten werden sp√§testens nach sieben Tage wieder gel√∂scht, soweit keine weitere Aufbewahrung zu Beweiszwecken erforderlich ist. Andernfalls sind die Daten bis zur endg√ºltigen Kl√§rung eines Vorfalls ganz oder teilweise von der L√∂schung ausgenommen.\nCookies a) Sitzungs-Cookies/Session-Cookies Wir verwenden mit unserem Internetauftritt sog. Cookies. Cookies sind kleine Textdateien oder andere Speichertechnologien, die durch den von Ihnen eingesetzten Internet-Browser auf Ihrem Endger√§t ablegt und gespeichert werden. Durch diese Cookies werden im individuellen Umfang bestimmte Informationen von Ihnen, wie beispielsweise Ihre Browser- oder Standortdaten oder Ihre IP-Adresse, verarbeitet.\nDurch diese Verarbeitung wird unser Internetauftritt benutzerfreundlicher, effektiver und sicherer, da die Verarbeitung bspw. die Wiedergabe unseres Internetauftritts in unterschiedlichen Sprachen oder das Angebot einer Warenkorbfunktion erm√∂glicht.\nRechtsgrundlage dieser Verarbeitung ist Art. 6 Abs. 1 lit b.) DSGVO, sofern diese Cookies Daten zur Vertragsanbahnung oder Vertragsabwicklung verarbeitet werden.\nFalls die Verarbeitung nicht der Vertragsanbahnung oder Vertragsabwicklung dient, liegt unser berechtigtes Interesse in der Verbesserung der Funktionalit√§t unseres Internetauftritts. Rechtsgrundlage ist in dann Art. 6 Abs. 1 lit. f) DSGVO.\nMit Schlie√üen Ihres Internet-Browsers werden diese Session-Cookies gel√∂scht.\nb) Drittanbieter-Cookies Gegebenenfalls werden mit unserem Internetauftritt auch Cookies von Partnerunternehmen, mit denen wir zum Zwecke der Werbung, der Analyse oder der Funktionalit√§ten unseres Internetauftritts zusammenarbeiten, verwendet.\nDie Einzelheiten hierzu, insbesondere zu den Zwecken und den Rechtsgrundlagen der Verarbeitung solcher Drittanbieter-Cookies, entnehmen Sie bitte den nachfolgenden Informationen.\nc) Beseitigungsm√∂glichkeit Sie k√∂nnen die Installation der Cookies durch eine Einstellung Ihres Internet-Browsers verhindern oder einschr√§nken. Ebenfalls k√∂nnen Sie bereits gespeicherte Cookies jederzeit l√∂schen. Die hierf√ºr erforderlichen Schritte und Ma√ünahmen h√§ngen jedoch von Ihrem konkret genutzten Internet-Browser ab. Bei Fragen benutzen Sie daher bitte die Hilfefunktion oder Dokumentation Ihres Internet-Browsers oder wenden sich an dessen Hersteller bzw. Support. Bei sog. Flash-Cookies kann die Verarbeitung allerdings nicht √ºber die Einstellungen des Browsers unterbunden werden. Stattdessen m√ºssen Sie insoweit die Einstellung Ihres Flash-Players √§ndern. Auch die hierf√ºr erforderlichen Schritte und Ma√ünahmen h√§ngen von Ihrem konkret genutzten Flash-Player ab. Bei Fragen benutzen Sie daher bitte ebenso die Hilfefunktion oder Dokumentation Ihres Flash-Players oder wenden sich an den Hersteller bzw. Benutzer-Support.\nSollten Sie die Installation der Cookies verhindern oder einschr√§nken, kann dies allerdings dazu f√ºhren, dass nicht s√§mtliche Funktionen unseres Internetauftritts vollumf√§nglich nutzbar sind.\nKontaktanfragen / Kontaktm√∂glichkeit Sofern Sie per Kontaktformular oder E-Mail mit uns in Kontakt treten, werden die dabei von Ihnen angegebenen Daten zur Bearbeitung Ihrer Anfrage genutzt. Die Angabe der Daten ist zur Bearbeitung und Beantwortung Ihre Anfrage erforderlich - ohne deren Bereitstellung k√∂nnen wir Ihre Anfrage nicht oder allenfalls eingeschr√§nkt beantworten.\nRechtsgrundlage f√ºr diese Verarbeitung ist Art. 6 Abs. 1 lit. b) DSGVO.\nIhre Daten werden gel√∂scht, sofern Ihre Anfrage abschlie√üend beantwortet worden ist und der L√∂schung keine gesetzlichen Aufbewahrungspflichten entgegenstehen, wie bspw. bei einer sich etwaig anschlie√üenden Vertragsabwicklung.\nNutzerbeitr√§ge, Kommentare und Bewertungen Wir bieten Ihnen an, auf unseren Internetseiten Fragen, Antworten, Meinungen oder Bewertungen, nachfolgend nur ‚ÄûBeitr√§ge genannt, zu ver√∂ffentlichen. Sofern Sie dieses Angebot in Anspruch nehmen, verarbeiten und ver√∂ffentlichen wir Ihren Beitrag, Datum und Uhrzeit der Einreichung sowie das von Ihnen ggf. genutzte Pseudonym.\nRechtsgrundlage hierbei ist Art. 6 Abs. 1 lit. a) DSGVO. Die Einwilligung k√∂nnen Sie gem√§√ü Art. 7 Abs. 3 DSGVO jederzeit mit Wirkung f√ºr die Zukunft widerrufen. Hierzu m√ºssen Sie uns lediglich √ºber Ihren Widerruf in Kenntnis setzen.\nDar√ºber hinaus verarbeiten wir auch Ihre IP- und E-Mail-Adresse. Die IP-Adresse wird verarbeitet, weil wir ein berechtigtes Interesse daran haben, weitere Schritte einzuleiten oder zu unterst√ºtzen, sofern Ihr Beitrag in Rechte Dritter eingreift und/oder er sonst wie rechtswidrig erfolgt.\nRechtsgrundlage ist in diesem Fall Art. 6 Abs. 1 lit. f) DSGVO. Unser berechtigtes Interesse liegt in der ggf. notwendigen Rechtsverteidigung.\nMuster-Datenschutzerkl√§rung der Anwaltskanzlei Wei√ü \u0026amp; Partner\n","ref":"/de/privacy_policy/"},{"title":"Impressum","date":"","description":"","body":"Angaben gem√§√ü ¬ß 5 TMG: Tobias Wink\nErasmusweg 8\n75015 Bretten\nKontakt: E-Mail: info@sainth.de\nQuelle: http://www.e-recht24.de\nHaftungsausschluss (Disclaimer) Haftung f√ºr Inhalte Als Diensteanbieter sind wir gem√§√ü ¬ß 7 Abs.1 TMG f√ºr eigene Inhalte auf diesen Seiten nach den allgemeinen Gesetzen verantwortlich. Nach ¬ß¬ß 8 bis 10 TMG sind wir als Diensteanbieter jedoch nicht verpflichtet, √ºbermittelte oder gespeicherte fremde Informationen zu √ºberwachen oder nach Umst√§nden zu forschen, die auf eine rechtswidrige T√§tigkeit hinweisen. Verpflichtungen zur Entfernung oder Sperrung der Nutzung von Informationen nach den allgemeinen Gesetzen bleiben hiervon unber√ºhrt. Eine diesbez√ºgliche Haftung ist jedoch erst ab dem Zeitpunkt der Kenntnis einer konkreten Rechtsverletzung m√∂glich. Bei Bekanntwerden von entsprechenden Rechtsverletzungen werden wir diese Inhalte umgehend entfernen.\nHaftung f√ºr Links Unser Angebot enth√§lt Links zu externen Webseiten Dritter, auf deren Inhalte wir keinen Einfluss haben. Deshalb k√∂nnen wir f√ºr diese fremden Inhalte auch keine Gew√§hr √ºbernehmen. F√ºr die Inhalte der verlinkten Seiten ist stets der jeweilige Anbieter oder Betreiber der Seiten verantwortlich. Die verlinkten Seiten wurden zum Zeitpunkt der Verlinkung auf m√∂gliche Rechtsverst√∂√üe √ºberpr√ºft. Rechtswidrige Inhalte waren zum Zeitpunkt der Verlinkung nicht erkennbar. Eine permanente inhaltliche Kontrolle der verlinkten Seiten ist jedoch ohne konkrete Anhaltspunkte einer Rechtsverletzung nicht zumutbar. Bei Bekanntwerden von Rechtsverletzungen werden wir derartige Links umgehend entfernen.\nUrheberrecht Die durch die Seitenbetreiber erstellten Inhalte und Werke auf diesen Seiten unterliegen dem deutschen Urheberrecht. Die Vervielf√§ltigung, Bearbeitung, Verbreitung und jede Art der Verwertung au√üerhalb der Grenzen des Urheberrechtes bed√ºrfen der schriftlichen Zustimmung des jeweiligen Autors bzw. Erstellers. Downloads und Kopien dieser Seite sind nur f√ºr den privaten, nicht kommerziellen Gebrauch gestattet. Soweit die Inhalte auf dieser Seite nicht vom Betreiber erstellt wurden, werden die Urheberrechte Dritter beachtet. Insbesondere werden Inhalte Dritter als solche gekennzeichnet. Sollten Sie trotzdem auf eine Urheberrechtsverletzung aufmerksam werden, bitten wir um einen entsprechenden Hinweis. Bei Bekanntwerden von Rechtsverletzungen werden wir derartige Inhalte umgehend entfernen.\n","ref":"/de/imprint/"},{"title":"Projekte","date":"","description":"","body":" pgTune ist aus einer Projektarbeit w√§hrend meines Masterstudiums entstanden. Mit Hilfe eines einfachen Formulars ist es m√∂glich, optimierte Parameter f√ºr die Konfiguration eines PostgreSQL-Servers zu erzeugen. Es ist ein Fork von pgtune und bietet neben einer leicht anders gestalteten Oberfl√§che vor allem eine REST-API. Dadurch kann diese Version von pgTune bspw. auch beim automatischen Deployment von VMs und/oder Containern verwendet werden. Sowohl Front- als auch Backend stehen unter der MIT-Lizenz und k√∂nnen somit auch angepasst bzw. lokal betrieben werden.\n","ref":"/de/projects/"},{"title":"Publikationen","date":"","description":"","body":" Masterthesis [EN]: Ein dezentraler Kommunikationsansatz f√ºr f√∂deriertes Lernen Term paper [DE]: Angriffe auf SSL 3.0 und TLS 1.0 bei Verwendung des CBC-Modes und Vorl√§uferversionen dieser Angriffe Bachelorthesis [DE]: Generierung der Persistenzschicht durch Erstellung einer dom√§nenspezifischen Sprache  ","ref":"/de/publications/"},{"title":"JWTs, eine Erg√§nzung zu BasicAuth","date":"","description":"Wie man JWTs in Kombination mit BasicAuth einsetzen kann.","body":"Die meisten REST-APIs unterst√ºtzen BasicAuth, wenn sie eine Authentifizierung erfordern und die Nutzerdaten selber verwalten. Bei der Wahl der Funktion zum Schutz von gespeicherten Passw√∂rtern gilt es, die richtige Balance zwischen Nutzerkomfort und Angreiferschutz zu finden. Man m√∂chte einerseits Angreifer m√∂glichst lange aufhalten, andererseits aber auch Benutzern m√∂glichst geringe Antwortzeiten erm√∂glichen. Alle von der OWASP empfohlenen adaptiven Passwort-Hash-Verfahren bieten daher die M√∂glichkeit, die Geschwindigkeit des Algorithmus √ºber einen Work Factor zu konfigurieren. Um diesen Work Factor m√∂glichst hoch w√§hlen zu k√∂nnen, ohne dabei die Benutzer unn√∂tig zu ver√§rgern, bietet sich nun die Nutzung von JWTs an.\nWas ist ein JWT? Ein JSON Web Token, kurz JWT (ausgesprochen \u0026ldquo;jot\u0026rdquo;), ist ein einfaches und kompaktes Format zur √úbertragung von Claims. JWTs sind darauf ausgelegt, in Bereichen eingesetzt zu werden, die sensibel auf Leerzeichen reagieren, wie beispielweise HTTP Authorization Header. Ein JWT ist eigentlich nur ein JSON-Objekt, welches die Claims als Inhalt hat. Im zugeh√∂rigen RFC 7519 werden einige Claims vordefiniert, meiner Meinung nach sind davon die Wichtigsten:\n sub-Claim (Subject): Enth√§lt den Prinzipal f√ºr den JWT. exp-Claim (Expiration Date): Definiert das Ablaufdatum f√ºr den JWT. Nach Ablauf dieses Timestamps darf der JWT nicht mehr akzeptiert oder verarbeitet werden. jti-Claim (JWT ID): Stellt eine Unique-ID f√ºr den JWT dar. Mit Hilfe dieser Claim sollte es m√∂glich sein, JWTs trotz √§hnlicher sonstiger Inhalte zu unterscheiden und dadurch Replay-Attacken zu verhindern.  Sollten die vordefinierten Claims nicht ausreichen, darf man sie um private Claims erweitern, solange es keine Konflikte zu den √∂ffentlichen Claims gibt.\nWie verwendet man sie nun? JWTs werden als Payload f√ºr JWS-Elemente oder auch als Plaintext innerhalb von JWE-Elementen verwendet, wobei ich mich hier auf JWS-Elemente beschr√§nken werde. Ein JWS-Element besteht aus den drei Bereichen Header, Payload und Signatur, die jeweils durch einen Punkt \u0026ldquo;.\u0026rdquo; getrennt werden. Nachfolgend ein Beispiel f√ºr einen fertig enkodierten JWT - f√ºr bessere Lesbarkeit wurden die Bereiche in eigene Zeilen verschoben:\neyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9. eyJzdWIiOiIxMjM0NTY3ODkwIiwicm9sZSI6ImFkbWluIn0. OC16ViAXu0_JaKXlUKQVHCKeZn1tXTwcwMDRpmY6xyc Header und Payload sind \u0026lt;abbr title=\u0026ldquo;Abgewandelte Version von Base64, bei der \u0026ldquo;+\u0026rdquo; und \u0026ldquo;/\u0026rdquo; durch \u0026ldquo;-\u0026rdquo; bzw. \u0026ldquo;\u0026rdquo; ersetzt werden.\u0026quot;\u0026gt;Base64-URL enkodierte JSON-Objekte. Die Signatur wird √ºber die mit \u0026ldquo;.\u0026rdquo; konkatenierten und bereits enkodierten Werte von Header und Payload erstellt und ist ebenfalls \u0026lt;abbr title=\u0026ldquo;Abgewandelte Version von Base64, bei der \u0026ldquo;+\u0026rdquo; und \u0026ldquo;/\u0026rdquo; durch \u0026ldquo;-\u0026rdquo; bzw. \u0026ldquo;\u0026rdquo; ersetzt werden.\u0026quot;\u0026gt;Base64-URL enkodiert. Der f√ºr die Signatur verwendete Algorithmus ist in der Header Claim alg festgelegt. Ein m√∂gliches Pseudocode-Beispiel der Signaturerstellung f√ºr das vorige Beispiel w√§re:\nbase64UrlEncode( HMACSHA256( base64UrlEncode(header) + \u0026#34;.\u0026#34; + base64UrlEncode(payload), \u0026#34;secret\u0026#34; ) ) Laut RFC 7515 m√ºssen JWS-Implementierungen nur einen einzigen Algorithmus f√ºr die Signatur unterst√ºtzen: HMAC mit SHA-256, auch HS256 genannt. Aber es wird empfohlen, RS256 (RSASSA PKCS1 v1.5 mit SHA-256) und ES256 (ECDSA mit P-256 und SHA-256) ebenfalls zu unterst√ºtzen. Viele Bibliotheken unterst√ºtzen auch entsprechende Abwandlungen der drei Algorithmen mit SHA-384 oder SHA-512 statt SHA-256.\nAlle Signaturverfahren erf√ºllen denselben Zweck: Sie erm√∂glichen die Sicherstellung der Authentizit√§t der JWT-Claims. Alle HMAC-Verfahren nutzen ein Shared-Secret f√ºr die Generierung/Validierung, aus diesem Grund muss das Vertrauen zwischen Parteien, die JWS mit HMAC-Verfahren nutzen, sehr gro√ü sein. Falls das Vertrauen zwischen den Parteien nicht so gro√ü ist (bspw. unterschiedliche Betreiber), sollte unbedingt ein Verfahren verwendet werden, welches auf RSASSA oder ECDSA basiert, da beide Verfahren Public-Key Algorithmen sind. Somit wird der JWT vom Aussteller bei der Erzeugung mit dem Private-Key signiert und jeder, der den zugeh√∂rigen Public-Key hat, kann die Signatur anschlie√üend validieren.\nWie verwendet man JWS nun in Verbindung mit BasicAuth? BasicAuth sollte nur f√ºr den ersten Request verwendet werden. In jeder Antwort sollte ein neuer Token mitgeschickt bzw. im Cookie gespeichert werden, bestenfalls mit neuem Wert f√ºr jti-Claim (welcher nat√ºrlich serverseitig auch ausgewertet werden sollte). Der Weg √ºber den Cookie ist meiner Meinung nach zu bevorzugen, falls es m√∂glich ist, da man frontendseitig nicht daran denken muss, den Token auszulesen um ihn beim n√§chsten Request wieder mitzuschicken. Au√üerdem erh√∂ht es die Sicherheit, wenn der Cookie das HttpOnly-Flag hat, da man per JavaScript nun nicht mehr darauf zugreifen kann. Sollte man den Token dennoch bei jedem Request mitsenden wollen/ m√ºssen, so hat es sich etabliert, diesen als Bearer-Token zu senden, also dann beispielweise Authorization : Bearer \u0026lt;JWS\u0026gt;.\nDa so das Passwort nur noch beim ersten Request mitgesendet und somit √ºberpr√ºft werden muss, kann man nun das verwendete Passwort-Hash-Verfahren so einstellen, dass es mindestens 200ms f√ºr das Hashen ben√∂tigt. Dadurch wird auch die Passwortsicherheit erh√∂ht.\nAls weiteres Extra kann man nun auch schon im Reverse-Proxy bzw. Loadbalancer feststellen, ob ein Client Zugang hat, indem der Token dort bereits √ºberpr√ºft wird. Daf√ºr gibt es freie Module bzw. hat NGINX Plus ab R10 native Unterst√ºtzung f√ºr JWTs. Dadurch wird einerseits das Backend entlastet und andererseits k√∂nnen auch Komponenten gesch√ºtzt werden, die nichts √ºber Authentifizierung wissen bspw. ein CDN.\nWorauf man achten sollte  Diese Tokens sollten nur der Authentifizierung dienen und nicht als Session-Cookies missbraucht werden. JWT-Claims als Payload von JWS-Elementen sind f√ºr jeden lesbar, somit sollten nur solche Informationen dort gespeichert/ √ºbertragen werden, die auch f√ºr jeden sichtbar sein d√ºrfen. JWS-Elemente ohne Signatur sollten als ung√ºltig angesehen werden. Die exp-Claim sollte immer verwendet werden, um die G√ºltigkeit eines Tokens einzuschr√§nken. Die jti-Claim sollte immer verwendet werden, um Replay-Attacken vorzubeugen. Wenn man JWTs zur Authentifizierung von REST-APIs verwendet, sollte der JWT in einem Cookie mit gesetztem HttpOnly gespeichert werden. Wenn Frontend und REST-Backend √ºber dieselbe Domain erreichbar sind, sollte der Cookie SameSite nutzen, auch wenn es bislang nur durch Chromium/ Chrome und Opera unterst√ºtzt wird.  Weiterf√ºhrende Links  RFC 7515: JSON Web Signature (JWS) RFC 7516: JSON Web Encryption (JWE) RFC 7517: JSON Web Key (JWK) RFC 7518: JSON Web Algorithms (JWA) RFC 7519: JSON Web Token (JWT) RFC 7520: Examples of Protecting Content Using JSON Object Signing and Encryption (JOSE) jwt.io: Website √ºber JWTs von auth0 mit einem kostenlosen, ausf√ºhrlichen Handbuch √ºber JWTs. ","ref":"/de/blog/jwts-and-basic-auth/"},{"title":"Nexus als Bin√§r-Repository f√ºr APKs nutzen","date":"","description":"Kurzes Tutorial, wie man Nexus OSS als Binarrepository f√ºr APKs benutzen kann","body":"Wer Nexus OSS nutzt, um seine fertigen Bin√§rartefakte abzulegen, m√∂chte dies nat√ºrlich auch f√ºr seine APKs machen. Da ich momentan beruflich an einer Android-App arbeite, habe ich nun meine Erfahrungen damit sammeln d√ºrfen. Und damit ich beim n√§chsten Mal nicht wieder √ºber dieselben Fallstricke stolpere, werde ich es hier Schritt f√ºr Schritt erl√§utern.\nMeine bisherigen Erfahrungen mit Gradle sind (gl√ºcklicherweise) kaum der Rede wert, sodass zuerst eine ausf√ºhrliche Google-Recherche auf dem Programm stand. Diese f√ºhrte mich auch alsbald zum Maven-Plugin f√ºr Gradle und der folgenden Konfiguration f√ºr uploadArchives:\napply plugin: \u0026#39;maven\u0026#39; uploadArchives { repositories { mavenDeployer { repository(url: \u0026#34;file://localhost/tmp/myRepo/\u0026#34;) } } } Ein entsprechender Aufruf mit gradlew clean assemble uploadArchives lief zwar erfolgreich durch, aber es wurden keinerlei Artefakte abgelegt. So wurde ich dann auf den Gradle-Userguide Publishing artifacts aufmerksam und mir wurde klar, dass die APKs deklariert werden m√ºssen, damit uploadArchives auch wei√ü, was hochgeladen werden soll.\nUm die APKs aller Buildvarianten (Debug, Release und/ oder Productflavors), die mit assemble erstellt werden, hinzuzuf√ºgen hilft die folgende Erg√§nzung:\nandroid.applicationVariants.all { variant -\u0026gt; def apkFile = file(variant.outputs.outputFile[0]) tasks.\u0026#34;assemble${variant.name.capitalize()}\u0026#34; \u0026lt;\u0026lt; { artifacts { archives file: apkFile } } } Leider funktioniert nun mit den hinzugef√ºgten APKs uploadArchives nicht mehr, da innerhalb einer POM nicht mehrere Artefakte desselben Typs und Classifiers vorkommen d√ºrfen. Es erscheint folgende Fehlermeldung:\n:app:uploadArchives FAILED FAILURE: Build failed with an exception. * What went wrong: Execution failed for task \u0026#39;:app:uploadArchives\u0026#39;. \u0026gt; Could not publish configuration \u0026#39;archives\u0026#39; \u0026gt; A POM cannot have multiple artifacts with the same type and classifier. Already have MavenArtifact app:apk:apk:null, trying to add MavenArtifact app:apk:apk:null. Also muss die Konfiguration der Artefakte noch ein wenig erweitert werden. Am einfachsten geht es √ºber den classifier, wie im nachfolgenden Snippet:\nandroid.applicationVariants.all { variant -\u0026gt; def apkFile = file(variant.outputs.outputFile[0]) tasks.\u0026#34;assemble${variant.name.capitalize()}\u0026#34; \u0026lt;\u0026lt; { artifacts { archives file: apkFile, name: variant.baseName, type: \u0026#39;apk\u0026#39;, classifier: variant.baseName } } } Damit ist der erste Teil abgeschlossen. Die APKs landen im konfigurierten Repository. Nun m√ºssen nur noch bei Bedarf die Standardwerte der POM-Generierung angepasst werden, in meinem Fall groupId, artifactId und version:\napply plugin: \u0026#39;maven\u0026#39; uploadArchives { repositories { mavenDeployer { repository(url: \u0026#34;file://localhost/tmp/myRepo/\u0026#34;) pom { groupId \u0026#39;de.sainth.android\u0026#39; artifactId \u0026#39;meineTolleApp\u0026#39; version android.defaultConfig.versionName } } } } Zu guter Letzt das lokale Repository durch das Reale ersetzen. Um die Zugangsdaten f√ºr den Nexus nicht einchecken zu m√ºssen, bietet es sich an, sie in der zentralen ~/.gradle/gradle.properties zu hinterlegen und darauf zu verweisen.\nnexusUser=Benutzername nexusPassword=Passwort So entsteht dann zum Schluss die nachfolgende Konfiguration f√ºr das Zusammenspiel von Gradle und Nexus f√ºr die APK-Ablage:\napply plugin: \u0026#39;maven\u0026#39; android.applicationVariants.all { variant -\u0026gt; def apkFile = file(variant.outputs.outputFile[0]) tasks.\u0026#34;assemble${variant.name.capitalize()}\u0026#34; \u0026lt;\u0026lt; { artifacts { archives file: apkFile, name: variant.baseName, type: \u0026#39;apk\u0026#39;, classifier: variant.baseName } } } uploadArchives { repositories { mavenDeployer { repository(url: \u0026#34;https://mein.nexus.de/repo/\u0026#34;) { authentication(userName: \u0026#34;$nexusUser\u0026#34;, password: \u0026#34;$nexusPassword\u0026#34;) } pom { groupId \u0026#39;de.sainth.android\u0026#39; artifactId \u0026#39;meineTolleApp\u0026#39; version android.defaultConfig.versionName } } } } ","ref":"/de/blog/use-nexus-as-a-binary-repository-for-apks/"},{"title":"Asciidoctor PDF","date":"","description":"Die Vorstellung eines Tools f√ºr einfache und sch√∂ne Dokumente","body":"Eine befreundete Firma hat mittlerweile gemerkt, dass sie auch dem hier beschriebenen Problem aufgesessen ist. Schlie√ülich kann ja jedes Kind Word bedienen, oder? So gern ich in diesen Momenten am liebsten S√§tze wie \u0026ldquo;Ich hab\u0026rsquo;s dir ja gesagt.\u0026rdquo; von mir geben w√ºrde, biete ich in solchen Situationen auch gern meine Hilfe an. Aus diesem Grund wird nun testweise eins der Dokumente, die regelm√§√üig aktualisiert und versioniert Dritten zur Verf√ºgung gestellt werden, auf AsciiDoc umgestellt. Im selben Zug soll auch gleichzeitig noch git zur √Ñnderungsverfolgung und Versionierung eingef√ºhrt werden, aber das ist eine andere Herausforderung, √ºber die ich vielleicht ein andermal schreiben werde.\nIch muss zugeben, dass ich mich √ºber diese Aufgabe auch gefreut habe. So hatte ich nun endlich einen Grund, mich genauer mit AsciiDoc zu besch√§ftigen und konnte die leider eh schon vernachl√§ssigten Pet-Projekte noch weiter nach hinten schieben. Ich muss sagen, dass sich mein erster positiver Eindruck √ºber AsciiDoc nur weiter verst√§rkt hat. Da es der Firma darauf ankommt, am Ende ein PDF im Corporate Design zu haben, war ich froh auf Asciidoctor PDF gesto√üen zu sein, welches direkt aus AsciiDoc PDFs generiert. Der \u0026ldquo;Umweg\u0026rdquo; mit DocBook als Zwischenformat bei der Generierung des PDFs gefiel mir nie, vor allem weil ich wei√ü, wie aufwendig teilweise solche Designanpassungen bei DocBook sein k√∂nnen.\nAsciidoctor PDF ist komplett in Ruby geschrieben und ist auch auf Windows-Systemen problemlos installierbar. Alle m√∂glichen Designanpassungen von Asciidoctor PDF sind im Theming-Guide dokumentiert und werden dann in einer YAML-Datei konfiguriert.\n!!! warning \u0026ldquo;Achtung\u0026rdquo; Damit es keine Probleme mit Nicht-ASCII-Zeichen (bspw. Umlaute) gibt, ist es wichtig, dass die Kommandozeile, mit der Asciidoctor PDF aufgerufen wird, mit UTF-8 encodiert ist. Das sollte unter Linux direkt der Fall sein, aber unter Windows muss daf√ºr der Befehl chcp 65001 vorher ausgef√ºhrt werden.\nEin Punkt, der mir auch einige Zeit Kopfzerbrechen bereitet hat, ist die fehlende Konfigurierbarkeit des Deckblatts. Man stolpert an vielen Stellen √ºber die unterschiedlichsten Anforderungen an ein Deckblatt, die sich so erstmal nicht erf√ºllen lassen. Aber f√ºr jedes Problem gibt es eine L√∂sung und auch in diesem Fall habe ich eine L√∂sung gefunden, die mir sehr gut gef√§llt. Es gibt n√§mlich in AsciiDoc die M√∂glichkeit, √ºber die Option :front-cover-image: ein Bild einzubinden, welches direkt hinter dem Deckblatt gerendert wird. Kombiniert man dies mit der Option :notitle:, die verhindert, dass das eigentliche Deckblatt gerendert wird, erh√§lt man als Resultat ein ma√ügeschneidertes Deckblatt. Das \u0026ldquo;Front-Cover-Image\u0026rdquo; ist einfach ein PDF, dass ich mit LibreOffice Writer erstellt habe.\nAber in einem Punkt muss ich mir auch widersprechen. Ich habe damals AsciiDocFx als Editor angepriesen, bin jedoch mittlerweile zu der Entscheidung gekommen, dass Visual Studio Code gepaart mit den Plugins von asciidoctor der bessere Editor ist.\n","ref":"/de/blog/asciidoctor-pdf/"},{"title":"Ein anderer Denkansatz","date":"","description":"Funktionale Programmierung erfordert einen anderen Denkansatz","body":"Leider ist schon wieder einige Zeit seit dem letzten Post vergangen. Im letzten Post habe ich etwas √ºber die Historie von funktionaler und imperativer Programmierung geschrieben. Dieser hier soll sich nun mit dem, im Vergleich zur imperativen Programmierung, anderen Denkansatz besch√§ftigen. Die hier gezeigten Quellcode-Beispiele beruhen dabei auf Java f√ºr die imperativen Beispiele bzw. auf Haskell f√ºr die funktionalen Beispiele. Ich werde bei den gezeigten Beispielen versuchen nur im Sprachstandard vorhandene Funktionen nutzen und nicht auf Bibliotheksfunktionen zur√ºckgreifen.\nBei der imperativen Programmierung beschreibt man detailliert die Schritte, die vom Computer ausgef√ºhrt werden m√ºssen, um die Aufgabe zu erf√ºllen. Im Gegensatz dazu wird bei der funktionalen Programmierung nicht beschrieben WIE etwas berechnet werden soll, sondern WAS. Nicht umsonst geh√∂ren funktionale Programmiersprachen zu den deklarativen Programmiersprachen.\nDurch die Funktionen wird, genauso wie in der Mathematik, die \u0026ldquo;Welt\u0026rdquo; im Ist-Zustand dargestellt bzw. definiert. Generell ist die funktionale Programmierung mit ihren Begrifflichkeiten und Konzepten sehr stark an der Mathematik angelehnt. Das macht es nicht matheaffinen Menschen nicht gerade leicht, birgt aber den gro√üen Vorteil, dass man, wenn man es geschafft hat die Konzepte zu verstehen, sich auf den mathematischen Hintergrund dieser Konzepte verlassen kann. Dadurch kann dann die Richtigkeit eines Programms mit \u0026ldquo;relativ\u0026rdquo; wenig Aufwand bewiesen werden, zumindest im Vergleich zu imperativen Programmen.\nW√§hrend die meisten imperativen Algorithmen auf der Manipulation von Speicherbereichen (gerne als Variablen bezeichnet) beruhen, lassen sich die funktionalen Algorithmen durch Termersetzung umsetzen. Um diesen Unterschied zu verdeutlichen, soll das folgende Beispiel zur Berechnung der Summe von 1 bis n dienen.\nSehen wir uns zuerst das imperative Beispiel an:\nint berechneSummeEinsBis(int n) { int ergebnis = 0; for (int zaehler = 1; zaehler \u0026lt;= n; zaehler++) { ergebnis += zaehler; } return ergebnis; } Bei der Ausf√ºhrung der oberen Funktion werden w√§hrend jedes Schleifendurchgangs die Variablen ergebnis und zaehler immer wieder ver√§ndert. F√ºr n=3 sieht das dann so aus:\n-- Initialisierung ergebnis := 0 zaehler := 1 -- 1. Schleifendurchgang ergebnis := 1 zaehler := 2 -- 2. Schleifendurchgang ergebnis := 3 zaehler := 3 -- 3. Schleifendurchgang ergebnis := 6 zaehler := 4 Im Vergleich w√ºrde eine Funktion f√ºr diese Berechnung folgenderma√üen aussehen:\nberechneSummeEinsBis :: Int -\u0026gt; Int berechneSummeEinsBis 0 = 0 berechneSummeEinsBis n = n + berechneSummeEinsBis (n-1) Bei der Ausf√ºhrung von Haskell wird nun Termersetzung angewendet und erst am Schluss wird etwas berechnet:\nberechneSummeEinsBis 3 -- Anwendung von berechneSummeEinsBis 3 + berechneSummeEinsBis (3-1) -- Anwendung von (-) 3 + berechneSummeEinsBis 2 -- Anwendung von berechneSummeEinsBis 3 + 2 + berechneSummeEinsBis (2-1) -- Anwendung von (-) 3 + 2 + berechneSummeEinsBis 1 -- Anwendung von berechneSummeEinsBis 3 + 2 + 1 + berechneSummeEinsBis (1-1) -- Anwendung von (-) 3 + 2 + 1 + berechneSummeEinsBis 0 -- Anwendung von berechneSummeEinsBis 3 + 2 + 1 + 0 -- Anwendung von (+) 5 + 1 + 0 -- Anwendung von (+) 6 + 0 -- Anwendung von (+) 6 Man kann schon bei diesem einfachen Beispiel die unterschiedlichen Ans√§tze erkennen. Im imperativen Beispiel wird eine Schleife benutzt und im funktionalen Beispiel Rekursion. Selbstverst√§ndlich ist Rekursion auch in imperativen Sprachen m√∂glich, aber un√ºblich, da es nat√ºrlich gewisse Gefahren birgt, die auch in Haskell nicht verschwinden. Aber das ist ein eigenes Thema, welches ich hoffentlich irgendwann nochmal aufgreifen werde.\nDoch man kann auch die unterschiedliche Art der Interpretation erkennen. W√§hrend in der imperativen Sprache immer wieder die Variablen ver√§ndert werden, wird bei der funktionalen Sprache erst die gesamte Formel durch Termersetzung aufgebaut, um sie anschlie√üend zu berechnen. Man k√∂nnte auch sagen, dass die funktionale Vorgehensweise der manuellen Vorgehensweise entspricht. Die Termersetzung ist n√§mlich das, was wir auch manuell beim L√∂sen einer Gleichung machen.\n","ref":"/de/blog/a-different-thinking-approach/"},{"title":"Ein wenig Historie zur funktionalen Programmierung","date":"","description":"Ein kurzer historischer √úberblick √ºber die Wurzeln der funktionalen Programmierung","body":"Funktionale Programmierung ist in aller Munde und √ºberall werden Konzepte aus der funktionalen Programmierung in imperative Sprachen √ºbernommen. Auch ich bin momentan dabei, mir besagte Konzepte genauer anzusehen und m√∂chte meine gewonnenen Erkenntnisse hier in Form einer Artikelserie ver√∂ffentlichen. Den Auftakt soll aber erst mal ein kleiner geschichtlicher R√ºckblick machen.\nIch muss zugeben, dass ich die Geschichte immer faszinierender finde, je mehr ich dar√ºber recherchiert habe.\nEs fing im Jahr 1936 an, als Alonzo Church im April mit seiner Ver√∂ffentlichung \u0026ldquo;An unsolvable Problem of Elementary Number Theory\u0026rdquo; nahelegte, dass das Entscheidungsproblem unl√∂sbar sei.\n \u0026hellip;the Entscheidungsproblem is unsolvable in the case of any system of symbolic logic which is œâ-consistent (œâ-widerspruchsfrei) in the sense of G√∂del (loc. cit., p. 187) and is strong enough to allow certain comparatively simple methods of definition and proof.\n\u0026ndash; Alonzo Church, An unsolvable Problem of Elementary Number Theory\n Um zu diesem Schluss zu kommen, hat er das Lambda-Kalk√ºl definiert, welches den Grundstein f√ºr die funktionale Programmierung legte.\nEtwa zur gleichen Zeit hat sich Alan Turing ebenfalls mit dem Entscheidungsproblem befasst und ver√∂ffentlichte im August 1936 \u0026ldquo;On computable numbers, with an application to the Entscheidungsproblem\u0026rdquo;. Darin musste er auf Churchs Arbeit verweisen, was ihm wohl etwas missfiel (siehe Alan Turing ‚Äî a short biography).\n In a recent paper Alonzo Church has introduced an idea of \u0026ldquo;effective calculability\u0026rdquo;, which is equivalent to my \u0026ldquo;computability\u0026rdquo;, but is very differently defined. Church also reaches similar conclusions about the Entscheidungsproblem.\n\u0026ndash; Alan Turing, On computable numbers, with an application to the Entscheidungsproblem\n Teil des Papers von Alan Turing war dabei die Definition der Automatic machines bzw. a-machines, welche heutzutage als Turingmaschinen besser bekannt sind und den Grundstein f√ºr die imperative Programmierung legten. Im Anhang besagten Papers legt Turing auch noch dar, dass die Klassen \u0026ldquo;effective calculability\u0026rdquo; (Lambda-Kalk√ºl) und \u0026ldquo;computability\u0026rdquo; (Turingmaschine) gleich m√§chtig sind.\nTuring kam im September 1936 an die Princeton Universit√§t und begann unter Church seine Promotion. Bemerkenswert finde ich ebenfalls, dass noch andere, in der Informatik bekannte Pers√∂nlichkeiten unter Church promovierten wie beispielsweise Kleene, Scott, Kemeny\nWie man an diesen Ausz√ºgen aus der Geschichte sehen kann, entstanden die jeweiligen Grundkonzepte beider Programmierparadigmen (funktional und imperativ) interessanterweise im Jahr 1936, aber unabh√§ngig voneinander als Beweis, dass das Entscheidungsproblem unl√∂sbar ist.\n","ref":"/de/blog/brief-history-of-functional-programming/"},{"title":"Word & Co haben zu viele Nachteile","date":"","description":"Ein Appell auch anderen Programmen als Word eine Chance zu geben","body":"Diesen Beitrag m√∂chte ich meiner kleinen Schwester und all den Anderen widmen, die der Meinung sind, Hausarbeiten, Abschlussarbeiten etc. mit Word verfassen zu m√ºssen und dabei nicht in der Lage sind, Seitenzahlen, Inhaltsverzeichnisse oder andere Notwendigkeiten zu integrieren. Im Endeffekt geht es bei solchen Arbeiten doch eigentlich nur darum, ein PDF mit dem gew√ºnschten Inhalt zu erstellen, um es entweder digital einzureichen oder auszudrucken.\nWas ist gegen WYSIWYG-Textverarbeitungsprogramme einzuwenden?  Sie bieten zu viele M√∂glichkeiten, sie falsch zu bedienen. Es f√§ngt schon damit an, dass man einen Absatz unabh√§ngig seiner Formatvorlage formatieren kann, so dass, wenn man nicht aufpasst, Wildwuchs entsteht. So habe ich schon Dokumente sehen d√ºrfen, bei denen sich der Verfasser gewundert hat, dass die Generierung des Inhaltsverzeichnisses nicht funktionierte. Die Ursache war schnell gefunden, wenn man sich die Gliederung des Dokuments angesehen hat, denn es existierten f√ºr das Programm keine √úberschriften. F√ºr das menschliche Auge waren die √úberschriften vorhanden, aber alle angeblichen √úberschriften hatten die Formatvorlage Absatz. Die Versionierung bzw. √Ñnderungsnachverfolgung ist kompliziert und viele haben davon noch nie geh√∂rt. Noch dazu ist es umst√§ndlich, mit mehreren Personen ein einzelnes Dokument zu bearbeiten, da die verschiedenen Versionen eines Dokuments erstmal wieder zu einem Dokument zusammengef√ºhrt werden m√ºssen.  Was gibt es f√ºr Alternativen?  TeX bzw. LaTeX: LaTeX ist eigentlich der Standard f√ºr Ausarbeitungen im MINT-Umfeld. Es besitzt ein sehr sauberes Layout mit einer hervorragenden Formelunterst√ºtzung. Es bietet beinahe so viele M√∂glichkeiten zur Formatierung wie Word \u0026amp; Co und dank pdflatex erzeugt man auch direkt PDF-Dateien. Es gibt etliche Editoren, Tutorials und Templates im Internet. Auch ich habe fast alle meine Ausarbeitungen w√§hrend des Studiums mit LaTeX geschrieben. Dabei habe ich Texmaker als Editor benutzt und meine Vorlage f√ºr meine Thesis war die Allgemeine Vorlage von Matthias Pospiech, welche eine sehr gute Grundlage bietet und super dokumentiert ist. DocBook: DocBook ist OASIS-Standard und basiert auf XML. XML ist nicht gerade f√ºr seine gute Lesbarkeit f√ºr Menschen bekannt, aber nach etwas √úbung kann man sich daran gew√∂hnen. Leider sind mir keine kostenlosen WYSIWYG-Editoren f√ºr DocBook bekannt. Es gibt eine gro√üe Vielfalt von Ausgabeformaten wobei HTML, EPUB und PDFs wohl die Interessantesten davon sind. Sollte einem das Standard-Layout nicht zusagen, so sind fundierte XSL- bzw. XSLT-Kenntnisse vonn√∂ten. Ich hatte vor einigen Jahren die Aufgabe genau solche Layout-Anpassungen vorzunehmen und w√ºrde sagen, dass solche Ab√§nderungen nur dann die M√ºhe wert sind, wenn man die entsprechenden Stylesheets langfristig nutzen m√∂chte. AsciiDoc: AsciiDoc nutzt ein vereinfachtes Markup, welches wie Markdown mit zus√§tzlichen Metadaten ist. Dadurch ist auch der Quellcode f√ºr Menschen lesbar. So kann man sich bei der Erstellung einfach auf den Text konzentrieren, ohne vom notwendigen Markup abgelenkt zu werden. AsciiDoc nutzt HTML und DocBook als Ausgabeformate und kann somit √ºber DocBook als Zwischenformat auch zum PDF weiterverarbeitet werden, aber unterliegt damit nat√ºrlich denselben Anforderungen f√ºr ein entsprechendes Ergebnis. pandoc: Pandoc soll das Schweizer Taschenmesser sein, wenn man ein Textformat in ein anderes √ºbersetzen m√∂chte. Laut der Pandoc Homepage gibt es 21 Eingabeformate und 37 Ausgabeformate, wobei alle bislang vorgestellten Formate auch als Eingabeformate vertreten sind. PDF wird als Ausgabeformat √ºber LaTeX als Zwischenformat unterst√ºtzt.  Es gibt sicherlich noch einige andere Alternativen, aber ich will es an dieser Stelle belassen. Pers√∂nlich habe ich mit LaTeX und DocBook bereits gearbeitet und die anderen beiden vorgestellten Alternativen nutzen LaTeX bzw. DocBook als Zwischenformat auf dem Weg zum PDF. Sowohl LaTeX, als auch DocBook erfordern eine entsprechende Einarbeitungszeit. Wenn man nicht gerade die m√§chtige Formelengine von LaTeX ben√∂tigt oder vielleicht sogar ein bestimmtes LaTeX-Template verwenden muss und bislang noch keine Erfahrung damit hat, w√ºrde ich nicht unbedingt LaTeX empfehlen. DocBook w√ºrde ich nur denjenigen empfehlen, die bereits Erfahrung mit HTML und dementsprechend dem Verpacken der Texte in passende Tags haben. Wie gut pandoc wirklich ist, kann ich nicht einsch√§tzen, aber je mehr Features eine Anwendung hat, desto gr√∂√üer ist die Wahrscheinlichkeit, dass ein Teil davon fehlerhaft ist. Daher bin ich ein Verfechter des KISS-Prinzips und w√ºrde zu AsciiDoc tendieren.\nZwar war es auch ein Teil meiner Recherche, zu diesem Artikel nach m√∂glichen Editoren zu suchen, aber mit den Ergebnissen m√∂chte ich mich nun auf meine Empfehlung AsciiDoc beschr√§nken. Sehr aufschlussreich dazu war die Seite von Asciidoctor, die eine gute √úbersicht liefert. Hervorheben m√∂chte ich dabei AsciiDocFX. AsciiDocFX ist ein Standalone Editor, der mit JavaFX geschrieben ist und daher auch ein Oracle JRE f√ºr den Betrieb ben√∂tigt. Er bietet eine integrierte Live-Preview und auch die von mir gew√ºnschte PDF-Exportm√∂glichkeit. Besonders gefallen hat mir dabei die M√∂glichkeit, ein Sample Book zu erstellen, welches erstmal alle grundlegenden Funktionen f√ºr die Erstellung einer Ausarbeitung in einem Beispiel zeigt.\n","ref":"/de/blog/word-is-too-complex/"},{"title":"The Phoenix Project","date":"","description":"Eine kurze Buchrezension von 'The Phoenix Project'","body":"Ich h√§tte nie gedacht, dass ich wirklich mal ein Buch lese, welches zugleich Fachbuch und Roman ist, das mich wirklich so begeistert, dass ich eine Rezension dar√ºber schreiben m√∂chte. Aber diese kaum vorstellbare Situation ist nun eingetreten. Vorab m√∂chte ich feststellen, dass mir f√ºr diesen Beitrag keine Vorteile versprochen wurden und ich das Buch ganz regul√§r im Handel erworben habe. Es handelt sich dabei um das Buch The Phoenix Project - A Novel About IT, DevOps, and Helping Your Business Win von Gene Kim, Kevin Behr und George Spafford.\nThe Phoenix Project erz√§hlt auf unnachahmliche Weise die Geschichte von Bill Palmer, einem Abteilungsleiter f√ºr den Midrange-Rechner-Bereich des Autoteileherstellers Parts Unlimited. Die Marktsituation von Parts Unlimited ist sehr angespannt, die Konkurrenz ist immer einen Schritt voraus. Bills √úberlebenstaktik war immer, unter dem Radar zu fliegen und nicht aufzufallen. So kommt der Tag, an dem Bill, als er sp√§t dran ist, auf dem Weg zur Arbeit von der Personalchefin in ihr B√ºro zitiert wird. Dort angekommen erf√§hrt er, dass sein Chef und dessen Chef, der CIO, nicht mehr in der Firma weilen und er nun nun der Leiter des IT-Betriebs werden soll und diese Wahl vom CEO pers√∂nlich getroffen wurde. Bill nimmt sich fest vor die Bef√∂rderung abzulehnen, aber irgendwie schafft es der charismatische CEO Steve Masters ihn im Gespr√§ch so zu √ºberfahren, dass es ihm nicht gelingt, die Bef√∂rderung abzulehnen.\nDirekt im Gespr√§ch mit Steve erf√§hrt er dann, dass es wohl IT-Probleme mit den Gehaltsabrechnungen gibt und er sich beim CFO Dick melden soll. Die Ursachenfindung f√§llt nicht leicht, da es parallel zu den Problemen mit den Gehaltsabrechnungen auch einen Ausfall im SAN gibt. So nimmt die Geschichte ihren Lauf. Anfangs versucht Bill, dem Chaos durch Pr√§zision und Disziplin Herr zu werden, wie er es bei den Marines gelernt hat und Strukturen einzuziehen, wie sie ihm in der Business School beigebracht wurden.\nIm Laufe des Buchs trifft Bill auf Erik. Erik soll, wenn es nach dem Aufsichtsratsvorsitzenden Bob Strauss und Steve Masters geht, dem Aufsichtsrat beitreten. Erik entspricht so gar nicht dem Profil des klassischen Gesch√§ftsmannes. Er erkl√§rt Bill in abgewetzten Hosen und T-Shirt immer wieder anhand einer der Fabriken von Parts Unlimited, dass sich die klassische Produktion und die IT (Entwicklung und Betrieb) eigentlich nicht unterscheiden und man somit sehr gut aus den Optimierungen und Verfahren der klassischen Produktion entsprechende Vorgehen f√ºr die IT ableiten kann.\nSo gibt es im Buch allerlei Probleme, die gel√∂st werden m√ºssen und man lernt anhand der drei Wege die notwendigen √úberlegungen und Schritte f√ºr DevOps kennen. Dabei wird auch die oft schwierige Beziehung zwischen Entwicklern und Administratoren beleuchtet. Man kann sich vorstellen, dass die beschriebenen Situationen/ Probleme in der Realit√§t auch wirklich eintreten. Das Buch taugt auch wunderbar als Nachschlagewerk, da die Essenz des Buchs im Anhang auch nochmal gut verst√§ndlich zusammengefasst ist, losgel√∂st von der eigentlichen Geschichte.\nAbschlie√üend m√∂chte ich sagen, dass dieses Buch eigentlich ein Standardwerk sein sollte, egal ob man Entwickler, Administrator oder bzw. vor allem wenn man Teil des Managements ist und sich wundert, dass die IT-Abteilungen nicht so ticken wie man denkt.\n","ref":"/de/blog/the-phoenix-project/"}]