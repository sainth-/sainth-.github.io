<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>devops on sainth.de</title><link>https://www.sainth.de/categories/devops/</link><description>Recent content in devops on sainth.de</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Â©2015-2020 Tobias Wink</copyright><lastBuildDate>Tue, 17 Jan 2017 21:30:00 +0100</lastBuildDate><atom:link href="https://www.sainth.de/categories/devops/index.xml" rel="self" type="application/rss+xml"/><item><title>Nexus as a binary repository for APKs</title><link>https://www.sainth.de/blog/use-nexus-as-a-binary-repository-for-apks/</link><pubDate>Tue, 17 Jan 2017 21:30:00 +0100</pubDate><guid>https://www.sainth.de/blog/use-nexus-as-a-binary-repository-for-apks/</guid><description>&lt;p>If you use &lt;a href="https://www.sonatype.com/download-oss-sonatype">Nexus OSS&lt;/a> to store your finished binary artifacts, you will of course want to do the same for your APKs. Since I&amp;rsquo;m currently working on an Android app professionally, I&amp;rsquo;ve now had the chance to gain my experience with it. Because I don&amp;rsquo;t want to make the same pitfalls again next time, I will explain it here step by step.&lt;/p>
&lt;p>My previous experiences with &lt;a href="https://gradle.org/">Gradle&lt;/a> are (fortunately) hardly worth mentioning, so first an extensive Google research was on the agenda. This soon led me to the &lt;a href="https://docs.gradle.org/current/userguide/maven_plugin.html">Maven plugin&lt;/a> for Gradle and the following configuration for &lt;code>uploadArchives&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-groovy" data-lang="groovy">apply plugin: &lt;span style="color:#e6db74">&amp;#39;maven&amp;#39;&lt;/span>
uploadArchives &lt;span style="color:#f92672">{&lt;/span>
repositories &lt;span style="color:#f92672">{&lt;/span>
mavenDeployer &lt;span style="color:#f92672">{&lt;/span>
repository&lt;span style="color:#f92672">(&lt;/span>url: &lt;span style="color:#e6db74">&amp;#34;file://localhost/tmp/myRepo/&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>A corresponding call with &lt;code>gradlew clean assemble uploadArchives&lt;/code> ran successfully, but no artifacts were stored. So I then became aware of the Gradle user guide &lt;a href="https://docs.gradle.org/current/userguide/artifact_management.html">Publishing artifacts&lt;/a> and realized that the APKs must be declared so that &lt;code>uploadArchives&lt;/code> also knows what is to be uploaded.&lt;/p></description></item><item><title>The Phoenix Project</title><link>https://www.sainth.de/blog/the-phoenix-project/</link><pubDate>Sat, 28 Nov 2015 14:00:00 +0100</pubDate><guid>https://www.sainth.de/blog/the-phoenix-project/</guid><description>&lt;p>I never thought I would actually read a book that is both a technical book and a novel, that would really excite me enough to want to write a review about it. But this hardly imaginable situation has now occurred. First of all, I would like to state that I was not promised any benefits for this post and that I purchased the book quite regularly in a store. It is the book &lt;em>The Phoenix Project - A Novel About IT, DevOps, and Helping Your Business Win&lt;/em> by Gene Kim, Kevin Behr, and George Spafford.&lt;/p>
&lt;p>The Phoenix Project inimitably tells the story of Bill Palmer, a midrange computer department manager at Parts Unlimited, an auto parts manufacturer. Parts Unlimited&amp;rsquo;s market situation is very tight, with competitors always one step ahead. Bill&amp;rsquo;s survival tactic has always been to fly under the radar and not stand out. So the day comes when Bill, running late for work, is called into her office by the HR manager on his way to work. Once there, he learns that his boss and his boss&amp;rsquo;s boss, the CIO, are no longer with the company and that he is now to become the head of IT operations and that this choice was made by the CEO himself. Bill firmly intends to refuse the promotion, but somehow the charismatic CEO Steve Masters manages to run him over in conversation so that he does not manage to refuse the promotion.&lt;/p></description></item></channel></rss>